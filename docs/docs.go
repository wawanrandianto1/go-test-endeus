// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/category/all": {
            "get": {
                "description": "Get all category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Get all category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endeus.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        },
        "/resep/all": {
            "get": {
                "description": "Get all resep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resep"
                ],
                "summary": "Get all resep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endeus.ResepAllResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        },
        "/resep/category/{id}": {
            "get": {
                "description": "Get all resep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resep"
                ],
                "summary": "Get all resep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id from category",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endeus.ResepAllResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        },
        "/resep/create": {
            "post": {
                "description": "Create one resep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resep"
                ],
                "summary": "Create one resep",
                "parameters": [
                    {
                        "description": "Resep to create",
                        "name": "resep",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endeus.ResepParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        },
        "/resep/delete/{id}": {
            "delete": {
                "description": "Delete single resep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resep"
                ],
                "summary": "Delete single resep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id from resep",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        },
        "/resep/single/{id}": {
            "get": {
                "description": "Get one resep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resep"
                ],
                "summary": "Get one resep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id from resep",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endeus.ResepSingleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        },
        "/resep/unpublish/{id}": {
            "put": {
                "description": "Change publis status resep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resep"
                ],
                "summary": "Change publis status resep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id from resep",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        },
        "/resep/update/{id}": {
            "put": {
                "description": "Update one resep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resep"
                ],
                "summary": "Update one resep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id from resep",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resep to update",
                        "name": "resep",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endeus.ResepParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "endeus.CategoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "endeus.ResepAllResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/endeus.ResepCustomResponse"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "endeus.ResepCustomResponse": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "judul": {
                    "type": "string"
                },
                "publish": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "endeus.ResepParam": {
            "type": "object",
            "required": [
                "category_id",
                "deskripsi",
                "deskripsi_bahan",
                "deskripsi_pembuatan",
                "judul",
                "lama_waktu",
                "porsi",
                "video_url"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "deskripsi": {
                    "type": "string"
                },
                "deskripsi_bahan": {
                    "type": "string"
                },
                "deskripsi_pembuatan": {
                    "type": "string"
                },
                "judul": {
                    "type": "string"
                },
                "lama_waktu": {
                    "type": "integer"
                },
                "porsi": {
                    "type": "integer"
                },
                "tips": {
                    "type": "string"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "endeus.ResepSingleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Resep"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.Bahan": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "porsi": {
                    "type": "integer"
                },
                "resep_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.CaraBuat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lama_waktu": {
                    "type": "integer"
                },
                "resep_id": {
                    "type": "integer"
                },
                "tips": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Resep": {
            "type": "object",
            "properties": {
                "bahan": {
                    "$ref": "#/definitions/model.Bahan"
                },
                "cara_masak": {
                    "$ref": "#/definitions/model.CaraBuat"
                },
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "judul": {
                    "type": "string"
                },
                "publish": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "utils.Error": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.Success": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:5000",
	BasePath:         "/api",
	Schemes:          []string{"http", "https"},
	Title:            "Swagger Endeus API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
